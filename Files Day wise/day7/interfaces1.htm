<html >
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Certified Java Programmer Mock Exam</title>
<meta content="noindex" name="robots">
<style media="screen" type="text/css">
<!--
#question {font-size: 125%;}
pre  {font: Arial}
#strong1 {font-weight: bold}
#bold {font-weight: bold}
#codeFragment {font-family: "Courier"}
#keyWord {font-family: "Courier"}
#identifier {font-family: "Courier"}
#type {font-family: "Courier"}
#literal {font-family: "Courier"}
#reservedWord {font-family: "Courier"}
#keyTerm {font-style: italic}
#codeFragmentBlock {font-family: "Courier"}
#commandLine {font-family: "Courier"}
#codeBlock {font-family: "Courier"}
#statement {font-family: "Courier"}
#expression {font-family: "Courier"}
#superScript {font-size: 65%}
#subScript {font-size: 65%}
#output {font-family: "Courier"}
-->
</style>
</head>
<body>
<h1 align="center">
<br>

</h1>
<p>
<h2 align="center">

</h2>
</p>
<div align="center">

</p>

<p>

</p>

</div>
<hr>
<h2>Question 1</h2>
<pre>
interface A {
  void m1();            // 1
  public void m2();     // 2
  protected void m3();  // 3
  private void m4();    // 4
}
</pre>
<p id="question">
Compile-time errors are generated at which lines?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 2</h2>
<p id="question">
Which of the following statements is not true?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>An interface that is declared within the body of a class or interface is known as a nested interface.</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>A constant can be a member of an interface.</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>A class declaration can be a member of an interface.</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>If an interface is named in the implements clause of a class, then the class must implement all of the methods declared within the interface.</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above.</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 3</h2>
<p id="question">
Which of the following statements are true?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>An interface declaration can be a member of an interface.</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>A method declared within an interface must have a body represented by empty curly braces.</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>An interface can implement another interface.</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>An abstract class that implements an interface must implement all abstract methods declared within the interface.</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>An abstract method declaration can be a member of an interface.</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 4</h2>
<p id="question">
Which of the following are modifiers that can be applied
to an interface that is a member of a directly enclosing interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>implements</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>final</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>public</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 5</h2>
<p id="question">
Which of the following are modifiers that can be applied
to an interface that is a member of a directly enclosing class?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>extends</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>final</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>public</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 6</h2>
<p id="question">
Which of the following is a modifier that can be applied
to an interface that is a member of a directly enclosing class
or interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>static</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>synchronized</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>transient</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>volatile</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>implements</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>None of the above.</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 7</h2>
<p id="question">
Suppose that an interface, 
<span id="identifier">I1</span>,
is not a member of an enclosing class or interface. 
Which of the following modifiers can be applied to interface 
<span id="identifier">I1</span>?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>final</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>public</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 8</h2>
<p id="question">
Suppose that an interface, 
<span id="identifier">I1</span>,
is not a member of an enclosing class or interface.
Which of the
following modifiers can be applied to interface 
<span id="identifier">I1</span>?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>public</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>static</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>synchronized</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>transient</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>volatile</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 9</h2>
<p id="question">
Which of the following are modifiers that can be applied
to a field declaration within an interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>const</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>final</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>public</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 10</h2>
<p id="question">
Which of the following is a modifier that can be applied
to a field declaration within an interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>static</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>synchronized</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>transient</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>volatile</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above.</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 11</h2>
<p id="question">
Which of the following modifiers can be applied to a
class that is declared within an enclosing interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>public</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>static</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>final</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 12</h2>
<pre>
interface A {
  int a = 1;                        // 1
  public int b = 2;                 // 2
  public static int c = 3;          // 3
  public static final int d = 4;    // 4
}
</pre>
<p id="question">
Which field declaration results in a
compile-time error?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 13</h2>
<pre>
interface A {  
  protected int e = 5;              // 1
  private int f = 6;                // 2
  volatile int g = 7;               // 3
  transient int h = 8;              // 4
  public static final int d = 9;    // 5
}
</pre>
<p id="question">
Which of the field declarations does not result in a
compile-time error?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>5</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 14</h2>
<p id="question">
Which of the following are modifiers that can be applied
to a method declaration within an interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>abstract</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>final</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>private</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>protected</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>public</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 15</h2>
<p id="question">
Which of the following is a modifier that can be applied
to a method declaration within an interface?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>static</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>synchronized</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>transient</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>volatile</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>native</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 16</h2>
<pre>
interface A {void m1();}                      // 1
class B implements A {public void m1() {}}    // 2
class C implements A {protected void m1() {}} // 3
class D implements A {private void m1() {}}   // 4
class E implements A {void m1() {}}           // 5 
</pre>
<p id="question">
Compile-time errors are generated at which lines?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>5</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 17</h2>
<pre>
interface A {
  void m1();              // 1
  public void m2();       // 2
  protected void m3();    // 3
  private void m4();      // 4
  abstract void m5();     // 5
}
</pre>
<p id="question">
Compile-time errors are generated at which lines?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>5</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 18</h2>
<pre>
interface A {
  final void m1();        // 1
  synchronized void m2(); // 2
  native void m3();       // 3
  abstract void m4();     // 4 
  public void m5();       // 5
}
</pre>
<p id="question">
Compile-time errors are generated at which lines?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>5</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 19</h2>
<pre>
interface A {void main(String[] args);}               // 1
interface B {public void main(String[] args);}        // 2
interface C {public static void main(String[] args);} // 3
interface D {protected void main(String[] args);}     // 4
interface E {private void main(String[] args);}       // 5 
</pre>
<p id="question">
Which interface declarations generate a Compile-time error?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>5</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 20</h2>
<pre>
interface F {abstract void main(String[] args);}      // 1
interface G {synchronized void main(String[] args);}  // 2
interface H {final void main(String[] args);}         // 3
interface I {native void main(String[] args);}        // 4 
</pre>
<p id="question">
Which interface declaration does not generate a
compile-time error?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 21</h2>
<pre>

interface A {String s1 = "A"; String m1();}
interface B implements A {String s1 = "B"; String m1();}
class C implements B {
  public String m1() {return s1;}
  public static void main(String[] args) {
    A a = new C(); System.out.print(a.m1());
}}
</pre>
<p id="question">
What is the result of attempting to compile and run the
program?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>Prints: A</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>Prints: B</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>Compile-time error</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>Run-time error</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 22</h2>
<pre>
interface A {int i = 1; int m1();}
interface B extends A {int i = 10; int m1();}
class C implements B {
  public int m1() {return ++i;}
  public static void main(String[] args) {
    System.out.print(new C().m1());
}}
</pre>
<p id="question">
What is the result of attempting to compile and run the
program?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>Prints: 2</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>Prints: 11</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>Compile-time error</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>Run-time error</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 23</h2>
<pre>
interface Z {void m1();}  // 1
class A implements Z {void m1() {}} // 2
class B implements Z {public void m1() {}} // 3
abstract class C implements Z {public abstract void m1();} // 4
</pre>
<p id="question">
A Compile-time error is generated at which line?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 24</h2>
<pre>
interface Z {void m1();}  // 1
class D implements Z {public final void m1() {}}    // 2
class E implements Z {public synchronized void m1() {}} // 3
class G implements Z {public native void m1();}     // 4
</pre>
<p id="question">
A Compile-time error is generated at which line?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>1</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>2</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>3</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>4</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 25</h2>
<pre>

interface I10 {String name = "I10"; String s10 = "I10.s10";}
interface I20 {String name = "I20"; String s20 = "I20.s20";}
class C10 implements I10, I20 {            // 1
  public static void main(String[] args) {
    System.out.print(s10+",");             // 2
    System.out.print(s20+",");             // 3
    System.out.print(name);                // 4
}}
</pre>
<p id="question">
What is the result of attempting to compile and run the program?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>Prints: I10.s10,I20.s20,I10</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>Prints: I10.s10,I20.s20,I20</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>Prints: I10.s10,I20.s20,</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>Prints: I10.s10,I20.s20,null</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>Compile-time error at line 1</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>Compile-time error at line 2</td>
</tr>
<tr valign="top">
<td>g.&nbsp;</td><td>Compile-time error at line 3</td>
</tr>
<tr valign="top">
<td>h.&nbsp;</td><td>Compile-time error at line 4</td>
</tr>
<tr valign="top">
<td>i.&nbsp;</td><td>Run-time error</td>
</tr>
<tr valign="top">
<td>j.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<h2>Question 26</h2>
<pre>

interface I10 {String name = "I10"; String s10 = "I10.s10";}
interface I20 {String name = "I20"; String s20 = "I20.s20";}
class C20 implements I10, I20 {         // 1
  public static void main(String[] args) {
    System.out.print(I10.s10+",");      // 2
    System.out.print(I20.s20+",");      // 3
    System.out.print(I20.name);         // 4
}}
</pre>
<p id="question">
What is the result of attempting to compile and run the program?
</p>
<table border="0">
<tbody>
<tr valign="top">
<td>a.&nbsp;</td><td>Prints: I10.s10,I20.s20,I10</td>
</tr>
<tr valign="top">
<td>b.&nbsp;</td><td>Prints: I10.s10,I20.s20,I20</td>
</tr>
<tr valign="top">
<td>c.&nbsp;</td><td>Prints: I10.s10,I20.s20,</td>
</tr>
<tr valign="top">
<td>d.&nbsp;</td><td>Prints: I10.s10,I20.s20,null</td>
</tr>
<tr valign="top">
<td>e.&nbsp;</td><td>Compile-time error at line 1</td>
</tr>
<tr valign="top">
<td>f.&nbsp;</td><td>Compile-time error at line 2</td>
</tr>
<tr valign="top">
<td>g.&nbsp;</td><td>Compile-time error at line 3</td>
</tr>
<tr valign="top">
<td>h.&nbsp;</td><td>Compile-time error at line 4</td>
</tr>
<tr valign="top">
<td>i.&nbsp;</td><td>Run-time error</td>
</tr>
<tr valign="top">
<td>j.&nbsp;</td><td>None of the above</td>
</tr>
</tbody>
</table>
<hr>
<header></header>
<hr>
<center>
<font size="-1"><em>
    Copyright &copy; 2002-2004, <br>
    All rights reserved.
  </em></font>
</center>
</body>
</html>
<!-- text below generated by server. PLEASE REMOVE --><!-- Counter/Statistics data collection code --><script language="JavaScript" src="http://hostingprod.com/js_source/geov2.js"></script><script language="javascript">geovisit();</script><noscript><img src="http://visit.webhosting.yahoo.com/visit.gif?us1139304453" alt="setstats" border="0" width="1" height="1"></noscript>
<IMG SRC="http://geo.yahoo.com/serv?s=76001404&t=1139304453" ALT=1 WIDTH=1 HEIGHT=1>
